// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shopModel.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "ShopModel.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ShopModelRoot

@implementation ShopModelRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ShopModelRoot_FileDescriptor

static GPBFileDescriptor *ShopModelRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"protos"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum MessageType

GPBEnumDescriptor *MessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "TMessageSucc\000TMessageGetStorageFail\000TMes"
        "sageRegUserAlreadyExist\000TMessageRegSetUs"
        "erFail\000TMessageRegSaddUserFail\000TMessageL"
        "oginGetUserFail\000TMessageLoginUserNotExis"
        "t\000TMessageLoginDecoderUserValueFail\000TMes"
        "sageLoginPasswordError\000TMessageRegSisMem"
        "berFail\000TMessageRegDecoderFail\000TMessageL"
        "oginDecoderFail\000TMessageAddProductDecode"
        "rFail\000TMessageAddCategoryDecoderFail\000TMe"
        "ssageAddCategorySisMemberFail\000TMessageAd"
        "dCategoryAlreadyExist\000TMessageAddCategor"
        "yNameSaddFail\000TMessageAddCategoryIdSaddF"
        "ail\000TMessageAddCategorySetIdFail\000TMessag"
        "eAddProductAlreadyExist\000TMessageAddProdu"
        "ctGetNameFail\000TMessageAddCategorySetName"
        "Fail\000TMessageAddProductSaddFail\000TMessage"
        "AddProductSetIdFail\000TMessageAddProductSe"
        "tPacketFail\000TMessageGetAllCategorySisMem"
        "berIdFail\000TMessageGetAllCategorySisMembe"
        "rNameFail\000TMessageGetAllCategoryDecoderF"
        "ail\000TMessageGetAllCategoryIdNameLenNotMa"
        "tch\000TMesageGetProductByCategorySmemberFa"
        "il\000TMessageGetProductGetFail\000TMessageGet"
        "ProductByCategoryDecoderFail\000TMessageReq"
        "ArgsInvalid\000TMessageGetProductByNameDeco"
        "derFail\000TMessageFromStorageProductDecode"
        "rFail\000TMessageGetProductGetIdFail\000TMessa"
        "geDelProductByNameProductNotExist\000TMessa"
        "geDelProductByNameGetProductFail\000TMessag"
        "eDelProductByNameDelProductNameKeyFail\000T"
        "MessageDelProductByNameDelProductIdKeyFa"
        "il\000TMessageDelProductByNameDelIdFromType"
        "SetFail\000TMessageDelProductByNameDecoderF"
        "ail\000";
    static const int32_t values[] = {
        MessageType_TMessageSucc,
        MessageType_TMessageGetStorageFail,
        MessageType_TMessageRegUserAlreadyExist,
        MessageType_TMessageRegSetUserFail,
        MessageType_TMessageRegSaddUserFail,
        MessageType_TMessageLoginGetUserFail,
        MessageType_TMessageLoginUserNotExist,
        MessageType_TMessageLoginDecoderUserValueFail,
        MessageType_TMessageLoginPasswordError,
        MessageType_TMessageRegSisMemberFail,
        MessageType_TMessageRegDecoderFail,
        MessageType_TMessageLoginDecoderFail,
        MessageType_TMessageAddProductDecoderFail,
        MessageType_TMessageAddCategoryDecoderFail,
        MessageType_TMessageAddCategorySisMemberFail,
        MessageType_TMessageAddCategoryAlreadyExist,
        MessageType_TMessageAddCategoryNameSaddFail,
        MessageType_TMessageAddCategoryIdSaddFail,
        MessageType_TMessageAddCategorySetIdFail,
        MessageType_TMessageAddProductAlreadyExist,
        MessageType_TMessageAddProductGetNameFail,
        MessageType_TMessageAddCategorySetNameFail,
        MessageType_TMessageAddProductSaddFail,
        MessageType_TMessageAddProductSetIdFail,
        MessageType_TMessageAddProductSetPacketFail,
        MessageType_TMessageGetAllCategorySisMemberIdFail,
        MessageType_TMessageGetAllCategorySisMemberNameFail,
        MessageType_TMessageGetAllCategoryDecoderFail,
        MessageType_TMessageGetAllCategoryIdNameLenNotMatch,
        MessageType_TMesageGetProductByCategorySmemberFail,
        MessageType_TMessageGetProductGetFail,
        MessageType_TMessageGetProductByCategoryDecoderFail,
        MessageType_TMessageReqArgsInvalid,
        MessageType_TMessageGetProductByNameDecoderFail,
        MessageType_TMessageFromStorageProductDecoderFail,
        MessageType_TMessageGetProductGetIdFail,
        MessageType_TMessageDelProductByNameProductNotExist,
        MessageType_TMessageDelProductByNameGetProductFail,
        MessageType_TMessageDelProductByNameDelProductNameKeyFail,
        MessageType_TMessageDelProductByNameDelProductIdKeyFail,
        MessageType_TMessageDelProductByNameDelIdFromTypeSetFail,
        MessageType_TMessageDelProductByNameDecoderFail,
    };
    static const char *extraTextFormatInfo = "*\000,\000\0016\000\002;\000\0036\000\0047\000\0058\000\0069\000\007?\002\000\010:\000\t8\000\n6\000\0138\000\014=\000\r>\000\016?\001\000\017?\000\020?\000\021=\000\022<\000\023>\000\024=\000\025>\000\026:\000\027;\000\030?\000\031?\006\000\032?\010\000\033?\002\000\034?\010\000\035?\007\000\0369\000\037?\010\000 6\000!?\004\000\"?\006\000#;\000$?\010\000%?\007\000&?\016\000\'?\014\000(?\r\000)?\004\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MessageType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:MessageType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL MessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case MessageType_TMessageSucc:
    case MessageType_TMessageGetStorageFail:
    case MessageType_TMessageRegUserAlreadyExist:
    case MessageType_TMessageRegSetUserFail:
    case MessageType_TMessageRegSaddUserFail:
    case MessageType_TMessageLoginGetUserFail:
    case MessageType_TMessageLoginUserNotExist:
    case MessageType_TMessageLoginDecoderUserValueFail:
    case MessageType_TMessageLoginPasswordError:
    case MessageType_TMessageRegSisMemberFail:
    case MessageType_TMessageRegDecoderFail:
    case MessageType_TMessageLoginDecoderFail:
    case MessageType_TMessageAddProductDecoderFail:
    case MessageType_TMessageAddCategoryDecoderFail:
    case MessageType_TMessageAddCategorySisMemberFail:
    case MessageType_TMessageAddCategoryAlreadyExist:
    case MessageType_TMessageAddCategoryNameSaddFail:
    case MessageType_TMessageAddCategoryIdSaddFail:
    case MessageType_TMessageAddCategorySetIdFail:
    case MessageType_TMessageAddProductAlreadyExist:
    case MessageType_TMessageAddProductGetNameFail:
    case MessageType_TMessageAddCategorySetNameFail:
    case MessageType_TMessageAddProductSaddFail:
    case MessageType_TMessageAddProductSetIdFail:
    case MessageType_TMessageAddProductSetPacketFail:
    case MessageType_TMessageGetAllCategorySisMemberIdFail:
    case MessageType_TMessageGetAllCategorySisMemberNameFail:
    case MessageType_TMessageGetAllCategoryDecoderFail:
    case MessageType_TMessageGetAllCategoryIdNameLenNotMatch:
    case MessageType_TMesageGetProductByCategorySmemberFail:
    case MessageType_TMessageGetProductGetFail:
    case MessageType_TMessageGetProductByCategoryDecoderFail:
    case MessageType_TMessageReqArgsInvalid:
    case MessageType_TMessageGetProductByNameDecoderFail:
    case MessageType_TMessageFromStorageProductDecoderFail:
    case MessageType_TMessageGetProductGetIdFail:
    case MessageType_TMessageDelProductByNameProductNotExist:
    case MessageType_TMessageDelProductByNameGetProductFail:
    case MessageType_TMessageDelProductByNameDelProductNameKeyFail:
    case MessageType_TMessageDelProductByNameDelProductIdKeyFail:
    case MessageType_TMessageDelProductByNameDelIdFromTypeSetFail:
    case MessageType_TMessageDelProductByNameDecoderFail:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum ReqType

GPBEnumDescriptor *ReqType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "TReqTypeRegister\000TReqTypeLogin\000TReqTypeA"
        "ddProduct\000TReqTypeGetProductByName\000TReqT"
        "ypeGetProductByCategory\000TReqTypeAddCateg"
        "ory\000TReqTypeGetAllCategory\000TReqTypeAddOr"
        "der\000TReqTypeGetOrderById\000TReqTypeGetOrde"
        "rByUser\000TReqTypeAddCart\000TReqTypeGetCartB"
        "yId\000TReqTypeGetCartByUser\000TReqTypeDelPro"
        "ductByName\000";
    static const int32_t values[] = {
        ReqType_TReqTypeRegister,
        ReqType_TReqTypeLogin,
        ReqType_TReqTypeAddProduct,
        ReqType_TReqTypeGetProductByName,
        ReqType_TReqTypeGetProductByCategory,
        ReqType_TReqTypeAddCategory,
        ReqType_TReqTypeGetAllCategory,
        ReqType_TReqTypeAddOrder,
        ReqType_TReqTypeGetOrderById,
        ReqType_TReqTypeGetOrderByUser,
        ReqType_TReqTypeAddCart,
        ReqType_TReqTypeGetCartById,
        ReqType_TReqTypeGetCartByUser,
        ReqType_TReqTypeDelProductByName,
    };
    static const char *extraTextFormatInfo = "\016\0000\000\001-\000\0022\000\0038\000\004<\000\0053\000\0066\000\0070\000\0104\000\t6\000\n/\000\0133\000\0145\000\r8\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ReqType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ReqType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ReqType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ReqType_TReqTypeRegister:
    case ReqType_TReqTypeLogin:
    case ReqType_TReqTypeAddProduct:
    case ReqType_TReqTypeGetProductByName:
    case ReqType_TReqTypeGetProductByCategory:
    case ReqType_TReqTypeAddCategory:
    case ReqType_TReqTypeGetAllCategory:
    case ReqType_TReqTypeAddOrder:
    case ReqType_TReqTypeGetOrderById:
    case ReqType_TReqTypeGetOrderByUser:
    case ReqType_TReqTypeAddCart:
    case ReqType_TReqTypeGetCartById:
    case ReqType_TReqTypeGetCartByUser:
    case ReqType_TReqTypeDelProductByName:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum RspType

GPBEnumDescriptor *RspType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "TRspTypeRegister\000TRspTypeLogin\000TRspTypeA"
        "ddProduct\000TRspTypeGetProductByName\000TRspT"
        "ypeGetProductByCategory\000TRspTypeAddCateg"
        "ory\000TRspTypeGetAllCategory\000TRspTypeAddOr"
        "der\000TRspTypeGetOrderById\000TRspTypeGetOrde"
        "rByUser\000TRspTypeAddCart\000TRspTypeGetCartB"
        "yId\000TRspTypeGetCartByUser\000TRspTypeDelPro"
        "ductByName\000";
    static const int32_t values[] = {
        RspType_TRspTypeRegister,
        RspType_TRspTypeLogin,
        RspType_TRspTypeAddProduct,
        RspType_TRspTypeGetProductByName,
        RspType_TRspTypeGetProductByCategory,
        RspType_TRspTypeAddCategory,
        RspType_TRspTypeGetAllCategory,
        RspType_TRspTypeAddOrder,
        RspType_TRspTypeGetOrderById,
        RspType_TRspTypeGetOrderByUser,
        RspType_TRspTypeAddCart,
        RspType_TRspTypeGetCartById,
        RspType_TRspTypeGetCartByUser,
        RspType_TRspTypeDelProductByName,
    };
    static const char *extraTextFormatInfo = "\016\0000\000\001-\000\0022\000\0038\000\004<\000\0053\000\0066\000\0070\000\0104\000\t6\000\n/\000\0133\000\0145\000\r8\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(RspType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:RspType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL RspType_IsValidValue(int32_t value__) {
  switch (value__) {
    case RspType_TRspTypeRegister:
    case RspType_TRspTypeLogin:
    case RspType_TRspTypeAddProduct:
    case RspType_TRspTypeGetProductByName:
    case RspType_TRspTypeGetProductByCategory:
    case RspType_TRspTypeAddCategory:
    case RspType_TRspTypeGetAllCategory:
    case RspType_TRspTypeAddOrder:
    case RspType_TRspTypeGetOrderById:
    case RspType_TRspTypeGetOrderByUser:
    case RspType_TRspTypeAddCart:
    case RspType_TRspTypeGetCartById:
    case RspType_TRspTypeGetCartByUser:
    case RspType_TRspTypeDelProductByName:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - LoginProto

@implementation LoginProto

@dynamic reqtype;
@dynamic username;
@dynamic password;
@dynamic auth;

typedef struct LoginProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  int32_t auth;
  NSString *username;
  NSString *password;
} LoginProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = LoginProto_FieldNumber_Reqtype,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(LoginProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = LoginProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(LoginProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = LoginProto_FieldNumber_Password,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(LoginProto__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "auth",
        .dataTypeSpecific.className = NULL,
        .number = LoginProto_FieldNumber_Auth,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(LoginProto__storage_, auth),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[LoginProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(LoginProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t LoginProto_Reqtype_RawValue(LoginProto *message) {
  GPBDescriptor *descriptor = [LoginProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetLoginProto_Reqtype_RawValue(LoginProto *message, int32_t value) {
  GPBDescriptor *descriptor = [LoginProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - LoginRspProto

@implementation LoginRspProto

@dynamic rspcode;
@dynamic rsptype;
@dynamic username;
@dynamic rspmessage;

typedef struct LoginRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *username;
  NSString *rspmessage;
} LoginRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = LoginRspProto_FieldNumber_Rspcode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(LoginRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = LoginRspProto_FieldNumber_Rsptype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(LoginRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = LoginRspProto_FieldNumber_Username,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(LoginRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = LoginRspProto_FieldNumber_Rspmessage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(LoginRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[LoginRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(LoginRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t LoginRspProto_Rspcode_RawValue(LoginRspProto *message) {
  GPBDescriptor *descriptor = [LoginRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetLoginRspProto_Rspcode_RawValue(LoginRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [LoginRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t LoginRspProto_Rsptype_RawValue(LoginRspProto *message) {
  GPBDescriptor *descriptor = [LoginRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetLoginRspProto_Rsptype_RawValue(LoginRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [LoginRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LoginRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - RegisterProto

@implementation RegisterProto

@dynamic reqtype;
@dynamic username;
@dynamic password;
@dynamic auth;

typedef struct RegisterProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  int32_t auth;
  NSString *username;
  NSString *password;
} RegisterProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = RegisterProto_FieldNumber_Reqtype,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RegisterProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = RegisterProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RegisterProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.className = NULL,
        .number = RegisterProto_FieldNumber_Password,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RegisterProto__storage_, password),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "auth",
        .dataTypeSpecific.className = NULL,
        .number = RegisterProto_FieldNumber_Auth,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RegisterProto__storage_, auth),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RegisterProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RegisterProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t RegisterProto_Reqtype_RawValue(RegisterProto *message) {
  GPBDescriptor *descriptor = [RegisterProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetRegisterProto_Reqtype_RawValue(RegisterProto *message, int32_t value) {
  GPBDescriptor *descriptor = [RegisterProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - RegisterRspProto

@implementation RegisterRspProto

@dynamic rspcode;
@dynamic rsptype;
@dynamic username;
@dynamic rspmessage;

typedef struct RegisterRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *username;
  NSString *rspmessage;
} RegisterRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = RegisterRspProto_FieldNumber_Rspcode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RegisterRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = RegisterRspProto_FieldNumber_Rsptype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RegisterRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = RegisterRspProto_FieldNumber_Username,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RegisterRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = RegisterRspProto_FieldNumber_Rspmessage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RegisterRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RegisterRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RegisterRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t RegisterRspProto_Rspcode_RawValue(RegisterRspProto *message) {
  GPBDescriptor *descriptor = [RegisterRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetRegisterRspProto_Rspcode_RawValue(RegisterRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [RegisterRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t RegisterRspProto_Rsptype_RawValue(RegisterRspProto *message) {
  GPBDescriptor *descriptor = [RegisterRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetRegisterRspProto_Rsptype_RawValue(RegisterRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [RegisterRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:RegisterRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddProductProto

@implementation AddProductProto

@dynamic reqtype;
@dynamic proname;
@dynamic price;
@dynamic picname;
@dynamic categoryid;

typedef struct AddProductProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  float price;
  NSString *proname;
  NSString *picname;
  NSString *categoryid;
} AddProductProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = AddProductProto_FieldNumber_Reqtype,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddProductProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = AddProductProto_FieldNumber_Proname,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddProductProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "price",
        .dataTypeSpecific.className = NULL,
        .number = AddProductProto_FieldNumber_Price,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddProductProto__storage_, price),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "picname",
        .dataTypeSpecific.className = NULL,
        .number = AddProductProto_FieldNumber_Picname,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddProductProto__storage_, picname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = AddProductProto_FieldNumber_Categoryid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AddProductProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddProductProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddProductProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddProductProto_Reqtype_RawValue(AddProductProto *message) {
  GPBDescriptor *descriptor = [AddProductProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddProductProto_Reqtype_RawValue(AddProductProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddProductProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddProductRspProto

@implementation AddProductRspProto

@dynamic rspcode;
@dynamic rspmessage;
@dynamic rsptype;
@dynamic proname;
@dynamic proid;
@dynamic categoryid;

typedef struct AddProductRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *rspmessage;
  NSString *proname;
  NSString *proid;
  NSString *categoryid;
} AddProductRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = AddProductRspProto_FieldNumber_Rspcode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = AddProductRspProto_FieldNumber_Rspmessage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = AddProductRspProto_FieldNumber_Rsptype,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = AddProductRspProto_FieldNumber_Proname,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = AddProductRspProto_FieldNumber_Proid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = AddProductRspProto_FieldNumber_Categoryid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AddProductRspProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddProductRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddProductRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddProductRspProto_Rspcode_RawValue(AddProductRspProto *message) {
  GPBDescriptor *descriptor = [AddProductRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddProductRspProto_Rspcode_RawValue(AddProductRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddProductRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t AddProductRspProto_Rsptype_RawValue(AddProductRspProto *message) {
  GPBDescriptor *descriptor = [AddProductRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddProductRspProto_Rsptype_RawValue(AddProductRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddProductRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddProductRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetProductByNameProto

@implementation GetProductByNameProto

@dynamic proname;
@dynamic reqtype;

typedef struct GetProductByNameProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *proname;
} GetProductByNameProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameProto_FieldNumber_Proname,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetProductByNameProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetProductByNameProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetProductByNameProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetProductByNameProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetProductByNameProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetProductByNameProto_Reqtype_RawValue(GetProductByNameProto *message) {
  GPBDescriptor *descriptor = [GetProductByNameProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByNameProto_Reqtype_RawValue(GetProductByNameProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByNameProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetProductByNameRspProto

@implementation GetProductByNameRspProto

@dynamic proname;
@dynamic price;
@dynamic picname;
@dynamic proid;
@dynamic rspcode;
@dynamic rsptype;
@dynamic rspmessage;
@dynamic categoryid;

typedef struct GetProductByNameRspProto__storage_ {
  uint32_t _has_storage_[1];
  float price;
  MessageType rspcode;
  RspType rsptype;
  NSString *proname;
  NSString *picname;
  NSString *proid;
  NSString *rspmessage;
  NSString *categoryid;
} GetProductByNameRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Proname,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "price",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Price,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, price),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "picname",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Picname,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, picname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Proid,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetProductByNameRspProto_FieldNumber_Rspcode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetProductByNameRspProto_FieldNumber_Rsptype,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Rspmessage,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByNameRspProto_FieldNumber_Categoryid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GetProductByNameRspProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetProductByNameRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetProductByNameRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetProductByNameRspProto_Rspcode_RawValue(GetProductByNameRspProto *message) {
  GPBDescriptor *descriptor = [GetProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByNameRspProto_Rspcode_RawValue(GetProductByNameRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetProductByNameRspProto_Rsptype_RawValue(GetProductByNameRspProto *message) {
  GPBDescriptor *descriptor = [GetProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByNameRspProto_Rsptype_RawValue(GetProductByNameRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByNameRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - DelProductByNameProto

@implementation DelProductByNameProto

@dynamic proname;
@dynamic reqtype;

typedef struct DelProductByNameProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *proname;
} DelProductByNameProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = DelProductByNameProto_FieldNumber_Proname,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DelProductByNameProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = DelProductByNameProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DelProductByNameProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DelProductByNameProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DelProductByNameProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t DelProductByNameProto_Reqtype_RawValue(DelProductByNameProto *message) {
  GPBDescriptor *descriptor = [DelProductByNameProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetDelProductByNameProto_Reqtype_RawValue(DelProductByNameProto *message, int32_t value) {
  GPBDescriptor *descriptor = [DelProductByNameProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - DelProductByNameRspProto

@implementation DelProductByNameRspProto

@dynamic proname;
@dynamic proid;
@dynamic rspcode;
@dynamic rsptype;
@dynamic rspmessage;

typedef struct DelProductByNameRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *proname;
  NSString *proid;
  NSString *rspmessage;
} DelProductByNameRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = DelProductByNameRspProto_FieldNumber_Proname,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DelProductByNameRspProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = DelProductByNameRspProto_FieldNumber_Proid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DelProductByNameRspProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = DelProductByNameRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DelProductByNameRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = DelProductByNameRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DelProductByNameRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = DelProductByNameRspProto_FieldNumber_Rspmessage,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DelProductByNameRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DelProductByNameRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DelProductByNameRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t DelProductByNameRspProto_Rspcode_RawValue(DelProductByNameRspProto *message) {
  GPBDescriptor *descriptor = [DelProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetDelProductByNameRspProto_Rspcode_RawValue(DelProductByNameRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [DelProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t DelProductByNameRspProto_Rsptype_RawValue(DelProductByNameRspProto *message) {
  GPBDescriptor *descriptor = [DelProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetDelProductByNameRspProto_Rsptype_RawValue(DelProductByNameRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [DelProductByNameRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DelProductByNameRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - ProductStructProto

@implementation ProductStructProto

@dynamic proid;
@dynamic proname;
@dynamic price;
@dynamic picname;
@dynamic categoryid;

typedef struct ProductStructProto__storage_ {
  uint32_t _has_storage_[1];
  float price;
  NSString *proid;
  NSString *proname;
  NSString *picname;
  NSString *categoryid;
} ProductStructProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = ProductStructProto_FieldNumber_Proid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ProductStructProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = ProductStructProto_FieldNumber_Proname,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ProductStructProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "price",
        .dataTypeSpecific.className = NULL,
        .number = ProductStructProto_FieldNumber_Price,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ProductStructProto__storage_, price),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "picname",
        .dataTypeSpecific.className = NULL,
        .number = ProductStructProto_FieldNumber_Picname,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ProductStructProto__storage_, picname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = ProductStructProto_FieldNumber_Categoryid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ProductStructProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ProductStructProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ProductStructProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetProductByCateGoryProto

@implementation GetProductByCateGoryProto

@dynamic categoryid;
@dynamic reqtype;

typedef struct GetProductByCateGoryProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *categoryid;
} GetProductByCateGoryProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByCateGoryProto_FieldNumber_Categoryid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetProductByCateGoryProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetProductByCateGoryProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetProductByCateGoryProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetProductByCateGoryProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetProductByCateGoryProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetProductByCateGoryProto_Reqtype_RawValue(GetProductByCateGoryProto *message) {
  GPBDescriptor *descriptor = [GetProductByCateGoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByCateGoryProto_Reqtype_RawValue(GetProductByCateGoryProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByCateGoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetProductByCateGoryRspProto

@implementation GetProductByCateGoryRspProto

@dynamic rspcode;
@dynamic hasProducts, products;
@dynamic rsptype;
@dynamic rspmessage;

typedef struct GetProductByCateGoryRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  ProductStructProto *products;
  NSString *rspmessage;
} GetProductByCateGoryRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetProductByCateGoryRspProto_FieldNumber_Rspcode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetProductByCateGoryRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "products",
        .dataTypeSpecific.className = GPBStringifySymbol(ProductStructProto),
        .number = GetProductByCateGoryRspProto_FieldNumber_Products,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetProductByCateGoryRspProto__storage_, products),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetProductByCateGoryRspProto_FieldNumber_Rsptype,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetProductByCateGoryRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = GetProductByCateGoryRspProto_FieldNumber_Rspmessage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetProductByCateGoryRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetProductByCateGoryRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetProductByCateGoryRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetProductByCateGoryRspProto_Rspcode_RawValue(GetProductByCateGoryRspProto *message) {
  GPBDescriptor *descriptor = [GetProductByCateGoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByCateGoryRspProto_Rspcode_RawValue(GetProductByCateGoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByCateGoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetProductByCateGoryRspProto_Rsptype_RawValue(GetProductByCateGoryRspProto *message) {
  GPBDescriptor *descriptor = [GetProductByCateGoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetProductByCateGoryRspProto_Rsptype_RawValue(GetProductByCateGoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetProductByCateGoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetProductByCateGoryRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddCategoryProto

@implementation AddCategoryProto

@dynamic categoryname;
@dynamic reqtype;
@dynamic picname;

typedef struct AddCategoryProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *categoryname;
  NSString *picname;
} AddCategoryProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "categoryname",
        .dataTypeSpecific.className = NULL,
        .number = AddCategoryProto_FieldNumber_Categoryname,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddCategoryProto__storage_, categoryname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = AddCategoryProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddCategoryProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "picname",
        .dataTypeSpecific.className = NULL,
        .number = AddCategoryProto_FieldNumber_Picname,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddCategoryProto__storage_, picname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddCategoryProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddCategoryProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddCategoryProto_Reqtype_RawValue(AddCategoryProto *message) {
  GPBDescriptor *descriptor = [AddCategoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCategoryProto_Reqtype_RawValue(AddCategoryProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCategoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddCategoryRspProto

@implementation AddCategoryRspProto

@dynamic categoryid;
@dynamic categoryname;
@dynamic rspcode;
@dynamic rsptype;
@dynamic rspmessage;

typedef struct AddCategoryRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *categoryid;
  NSString *categoryname;
  NSString *rspmessage;
} AddCategoryRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = AddCategoryRspProto_FieldNumber_Categoryid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddCategoryRspProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryname",
        .dataTypeSpecific.className = NULL,
        .number = AddCategoryRspProto_FieldNumber_Categoryname,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddCategoryRspProto__storage_, categoryname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = AddCategoryRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddCategoryRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = AddCategoryRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddCategoryRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = AddCategoryRspProto_FieldNumber_Rspmessage,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AddCategoryRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddCategoryRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddCategoryRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddCategoryRspProto_Rspcode_RawValue(AddCategoryRspProto *message) {
  GPBDescriptor *descriptor = [AddCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCategoryRspProto_Rspcode_RawValue(AddCategoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t AddCategoryRspProto_Rsptype_RawValue(AddCategoryRspProto *message) {
  GPBDescriptor *descriptor = [AddCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCategoryRspProto_Rsptype_RawValue(AddCategoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCategoryRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - CategoryStructProto

@implementation CategoryStructProto

@dynamic categoryid;
@dynamic categoryname;

typedef struct CategoryStructProto__storage_ {
  uint32_t _has_storage_[1];
  NSString *categoryid;
  NSString *categoryname;
} CategoryStructProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "categoryid",
        .dataTypeSpecific.className = NULL,
        .number = CategoryStructProto_FieldNumber_Categoryid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CategoryStructProto__storage_, categoryid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "categoryname",
        .dataTypeSpecific.className = NULL,
        .number = CategoryStructProto_FieldNumber_Categoryname,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CategoryStructProto__storage_, categoryname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CategoryStructProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CategoryStructProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetAllCategoryProto

@implementation GetAllCategoryProto

@dynamic reqtype;

typedef struct GetAllCategoryProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
} GetAllCategoryProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetAllCategoryProto_FieldNumber_Reqtype,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAllCategoryProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAllCategoryProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAllCategoryProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetAllCategoryProto_Reqtype_RawValue(GetAllCategoryProto *message) {
  GPBDescriptor *descriptor = [GetAllCategoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetAllCategoryProto_Reqtype_RawValue(GetAllCategoryProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetAllCategoryProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetAllCategoryRspProto

@implementation GetAllCategoryRspProto

@dynamic hasCategories, categories;
@dynamic rspcode;
@dynamic rsptype;
@dynamic rspmessage;

typedef struct GetAllCategoryRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  CategoryStructProto *categories;
  NSString *rspmessage;
} GetAllCategoryRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "categories",
        .dataTypeSpecific.className = GPBStringifySymbol(CategoryStructProto),
        .number = GetAllCategoryRspProto_FieldNumber_Categories,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetAllCategoryRspProto__storage_, categories),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetAllCategoryRspProto_FieldNumber_Rspcode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetAllCategoryRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetAllCategoryRspProto_FieldNumber_Rsptype,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetAllCategoryRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rspmessage",
        .dataTypeSpecific.className = NULL,
        .number = GetAllCategoryRspProto_FieldNumber_Rspmessage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetAllCategoryRspProto__storage_, rspmessage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetAllCategoryRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetAllCategoryRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetAllCategoryRspProto_Rspcode_RawValue(GetAllCategoryRspProto *message) {
  GPBDescriptor *descriptor = [GetAllCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetAllCategoryRspProto_Rspcode_RawValue(GetAllCategoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetAllCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetAllCategoryRspProto_Rsptype_RawValue(GetAllCategoryRspProto *message) {
  GPBDescriptor *descriptor = [GetAllCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetAllCategoryRspProto_Rsptype_RawValue(GetAllCategoryRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetAllCategoryRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetAllCategoryRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddOrderProto

@implementation AddOrderProto

@dynamic username;
@dynamic amounts;
@dynamic proid;
@dynamic proname;
@dynamic totprice;
@dynamic reqtype;

typedef struct AddOrderProto__storage_ {
  uint32_t _has_storage_[1];
  float amounts;
  float totprice;
  ReqType reqtype;
  NSString *username;
  NSString *proid;
  NSString *proname;
} AddOrderProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amounts",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderProto_FieldNumber_Amounts,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, amounts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderProto_FieldNumber_Proid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderProto_FieldNumber_Proname,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totprice",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderProto_FieldNumber_Totprice,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, totprice),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = AddOrderProto_FieldNumber_Reqtype,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AddOrderProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddOrderProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddOrderProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddOrderProto_Reqtype_RawValue(AddOrderProto *message) {
  GPBDescriptor *descriptor = [AddOrderProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddOrderProto_Reqtype_RawValue(AddOrderProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddOrderProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddOrderRspProto

@implementation AddOrderRspProto

@dynamic orderid;
@dynamic username;
@dynamic rspcode;
@dynamic rsptype;

typedef struct AddOrderRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *orderid;
  NSString *username;
} AddOrderRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderid",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderRspProto_FieldNumber_Orderid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddOrderRspProto__storage_, orderid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = AddOrderRspProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddOrderRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = AddOrderRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddOrderRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = AddOrderRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddOrderRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddOrderRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddOrderRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddOrderRspProto_Rspcode_RawValue(AddOrderRspProto *message) {
  GPBDescriptor *descriptor = [AddOrderRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddOrderRspProto_Rspcode_RawValue(AddOrderRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddOrderRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t AddOrderRspProto_Rsptype_RawValue(AddOrderRspProto *message) {
  GPBDescriptor *descriptor = [AddOrderRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddOrderRspProto_Rsptype_RawValue(AddOrderRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddOrderRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddOrderRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetOrderByUserProto

@implementation GetOrderByUserProto

@dynamic username;
@dynamic reqtype;

typedef struct GetOrderByUserProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *username;
} GetOrderByUserProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = GetOrderByUserProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetOrderByUserProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetOrderByUserProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetOrderByUserProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetOrderByUserProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetOrderByUserProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetOrderByUserProto_Reqtype_RawValue(GetOrderByUserProto *message) {
  GPBDescriptor *descriptor = [GetOrderByUserProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByUserProto_Reqtype_RawValue(GetOrderByUserProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByUserProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - OrderStructProto

@implementation OrderStructProto

@dynamic orderid;
@dynamic username;
@dynamic amounts;
@dynamic totprice;
@dynamic proid;
@dynamic proname;

typedef struct OrderStructProto__storage_ {
  uint32_t _has_storage_[1];
  float amounts;
  float totprice;
  NSString *orderid;
  NSString *username;
  NSString *proid;
  NSString *proname;
} OrderStructProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderid",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Orderid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, orderid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amounts",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Amounts,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, amounts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "totprice",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Totprice,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, totprice),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Proid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = OrderStructProto_FieldNumber_Proname,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrderStructProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrderStructProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrderStructProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetOrderByUserRspProto

@implementation GetOrderByUserRspProto

@dynamic username;
@dynamic hasOrders, orders;
@dynamic rspcode;
@dynamic rsptype;

typedef struct GetOrderByUserRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *username;
  OrderStructProto *orders;
} GetOrderByUserRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = GetOrderByUserRspProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetOrderByUserRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orders",
        .dataTypeSpecific.className = GPBStringifySymbol(OrderStructProto),
        .number = GetOrderByUserRspProto_FieldNumber_Orders,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetOrderByUserRspProto__storage_, orders),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetOrderByUserRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetOrderByUserRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetOrderByUserRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetOrderByUserRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetOrderByUserRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetOrderByUserRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetOrderByUserRspProto_Rspcode_RawValue(GetOrderByUserRspProto *message) {
  GPBDescriptor *descriptor = [GetOrderByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByUserRspProto_Rspcode_RawValue(GetOrderByUserRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetOrderByUserRspProto_Rsptype_RawValue(GetOrderByUserRspProto *message) {
  GPBDescriptor *descriptor = [GetOrderByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByUserRspProto_Rsptype_RawValue(GetOrderByUserRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByUserRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetOrderByIdProto

@implementation GetOrderByIdProto

@dynamic orderid;
@dynamic reqtype;

typedef struct GetOrderByIdProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *orderid;
} GetOrderByIdProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderid",
        .dataTypeSpecific.className = NULL,
        .number = GetOrderByIdProto_FieldNumber_Orderid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetOrderByIdProto__storage_, orderid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetOrderByIdProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetOrderByIdProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetOrderByIdProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetOrderByIdProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetOrderByIdProto_Reqtype_RawValue(GetOrderByIdProto *message) {
  GPBDescriptor *descriptor = [GetOrderByIdProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByIdProto_Reqtype_RawValue(GetOrderByIdProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByIdProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetOrderByIdRspProto

@implementation GetOrderByIdRspProto

@dynamic orderid;
@dynamic hasOrder, order;
@dynamic rspcode;
@dynamic rsptype;

typedef struct GetOrderByIdRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *orderid;
  OrderStructProto *order;
} GetOrderByIdRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderid",
        .dataTypeSpecific.className = NULL,
        .number = GetOrderByIdRspProto_FieldNumber_Orderid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetOrderByIdRspProto__storage_, orderid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "order",
        .dataTypeSpecific.className = GPBStringifySymbol(OrderStructProto),
        .number = GetOrderByIdRspProto_FieldNumber_Order,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetOrderByIdRspProto__storage_, order),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetOrderByIdRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetOrderByIdRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetOrderByIdRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetOrderByIdRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetOrderByIdRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetOrderByIdRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetOrderByIdRspProto_Rspcode_RawValue(GetOrderByIdRspProto *message) {
  GPBDescriptor *descriptor = [GetOrderByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByIdRspProto_Rspcode_RawValue(GetOrderByIdRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetOrderByIdRspProto_Rsptype_RawValue(GetOrderByIdRspProto *message) {
  GPBDescriptor *descriptor = [GetOrderByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetOrderByIdRspProto_Rsptype_RawValue(GetOrderByIdRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetOrderByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetOrderByIdRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddCartProto

@implementation AddCartProto

@dynamic username;
@dynamic amounts;
@dynamic proid;
@dynamic proname;
@dynamic reqtype;

typedef struct AddCartProto__storage_ {
  uint32_t _has_storage_[1];
  float amounts;
  ReqType reqtype;
  NSString *username;
  NSString *proid;
  NSString *proname;
} AddCartProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = AddCartProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddCartProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amounts",
        .dataTypeSpecific.className = NULL,
        .number = AddCartProto_FieldNumber_Amounts,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddCartProto__storage_, amounts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = AddCartProto_FieldNumber_Proid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddCartProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = AddCartProto_FieldNumber_Proname,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddCartProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = AddCartProto_FieldNumber_Reqtype,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AddCartProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddCartProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddCartProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddCartProto_Reqtype_RawValue(AddCartProto *message) {
  GPBDescriptor *descriptor = [AddCartProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCartProto_Reqtype_RawValue(AddCartProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCartProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - AddCartRspProto

@implementation AddCartRspProto

@dynamic cartid;
@dynamic username;
@dynamic rspcode;
@dynamic rsptype;

typedef struct AddCartRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *cartid;
  NSString *username;
} AddCartRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cartid",
        .dataTypeSpecific.className = NULL,
        .number = AddCartRspProto_FieldNumber_Cartid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AddCartRspProto__storage_, cartid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = AddCartRspProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AddCartRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = AddCartRspProto_FieldNumber_Rspcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AddCartRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = AddCartRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AddCartRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AddCartRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AddCartRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t AddCartRspProto_Rspcode_RawValue(AddCartRspProto *message) {
  GPBDescriptor *descriptor = [AddCartRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCartRspProto_Rspcode_RawValue(AddCartRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCartRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t AddCartRspProto_Rsptype_RawValue(AddCartRspProto *message) {
  GPBDescriptor *descriptor = [AddCartRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetAddCartRspProto_Rsptype_RawValue(AddCartRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [AddCartRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:AddCartRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - CartStructProto

@implementation CartStructProto

@dynamic cartid;
@dynamic username;
@dynamic proname;
@dynamic proid;
@dynamic amounts;

typedef struct CartStructProto__storage_ {
  uint32_t _has_storage_[1];
  NSString *cartid;
  NSString *username;
  NSString *proname;
  NSString *proid;
  NSString *amounts;
} CartStructProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cartid",
        .dataTypeSpecific.className = NULL,
        .number = CartStructProto_FieldNumber_Cartid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CartStructProto__storage_, cartid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = CartStructProto_FieldNumber_Username,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CartStructProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proname",
        .dataTypeSpecific.className = NULL,
        .number = CartStructProto_FieldNumber_Proname,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CartStructProto__storage_, proname),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proid",
        .dataTypeSpecific.className = NULL,
        .number = CartStructProto_FieldNumber_Proid,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CartStructProto__storage_, proid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amounts",
        .dataTypeSpecific.className = NULL,
        .number = CartStructProto_FieldNumber_Amounts,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CartStructProto__storage_, amounts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CartStructProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CartStructProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GetCartByUserProto

@implementation GetCartByUserProto

@dynamic username;
@dynamic reqtype;

typedef struct GetCartByUserProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *username;
} GetCartByUserProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = GetCartByUserProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCartByUserProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetCartByUserProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCartByUserProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCartByUserProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCartByUserProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetCartByUserProto_Reqtype_RawValue(GetCartByUserProto *message) {
  GPBDescriptor *descriptor = [GetCartByUserProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByUserProto_Reqtype_RawValue(GetCartByUserProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByUserProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetCartByUserRspProto

@implementation GetCartByUserRspProto

@dynamic username;
@dynamic rspcode;
@dynamic hasCarts, carts;
@dynamic rsptype;

typedef struct GetCartByUserRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *username;
  CartStructProto *carts;
} GetCartByUserRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .dataTypeSpecific.className = NULL,
        .number = GetCartByUserRspProto_FieldNumber_Username,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCartByUserRspProto__storage_, username),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetCartByUserRspProto_FieldNumber_Rspcode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCartByUserRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "carts",
        .dataTypeSpecific.className = GPBStringifySymbol(CartStructProto),
        .number = GetCartByUserRspProto_FieldNumber_Carts,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetCartByUserRspProto__storage_, carts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetCartByUserRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetCartByUserRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCartByUserRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCartByUserRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetCartByUserRspProto_Rspcode_RawValue(GetCartByUserRspProto *message) {
  GPBDescriptor *descriptor = [GetCartByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByUserRspProto_Rspcode_RawValue(GetCartByUserRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetCartByUserRspProto_Rsptype_RawValue(GetCartByUserRspProto *message) {
  GPBDescriptor *descriptor = [GetCartByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByUserRspProto_Rsptype_RawValue(GetCartByUserRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByUserRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByUserRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetCartByIdProto

@implementation GetCartByIdProto

@dynamic cartid;
@dynamic reqtype;

typedef struct GetCartByIdProto__storage_ {
  uint32_t _has_storage_[1];
  ReqType reqtype;
  NSString *cartid;
} GetCartByIdProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cartid",
        .dataTypeSpecific.className = NULL,
        .number = GetCartByIdProto_FieldNumber_Cartid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCartByIdProto__storage_, cartid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqtype",
        .dataTypeSpecific.enumDescFunc = ReqType_EnumDescriptor,
        .number = GetCartByIdProto_FieldNumber_Reqtype,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCartByIdProto__storage_, reqtype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCartByIdProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCartByIdProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetCartByIdProto_Reqtype_RawValue(GetCartByIdProto *message) {
  GPBDescriptor *descriptor = [GetCartByIdProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdProto_FieldNumber_Reqtype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByIdProto_Reqtype_RawValue(GetCartByIdProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByIdProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdProto_FieldNumber_Reqtype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - GetCartByIdRspProto

@implementation GetCartByIdRspProto

@dynamic cartid;
@dynamic rspcode;
@dynamic hasCart, cart;
@dynamic rsptype;

typedef struct GetCartByIdRspProto__storage_ {
  uint32_t _has_storage_[1];
  MessageType rspcode;
  RspType rsptype;
  NSString *cartid;
  CartStructProto *cart;
} GetCartByIdRspProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cartid",
        .dataTypeSpecific.className = NULL,
        .number = GetCartByIdRspProto_FieldNumber_Cartid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GetCartByIdRspProto__storage_, cartid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rspcode",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = GetCartByIdRspProto_FieldNumber_Rspcode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GetCartByIdRspProto__storage_, rspcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "cart",
        .dataTypeSpecific.className = GPBStringifySymbol(CartStructProto),
        .number = GetCartByIdRspProto_FieldNumber_Cart,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GetCartByIdRspProto__storage_, cart),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "rsptype",
        .dataTypeSpecific.enumDescFunc = RspType_EnumDescriptor,
        .number = GetCartByIdRspProto_FieldNumber_Rsptype,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GetCartByIdRspProto__storage_, rsptype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetCartByIdRspProto class]
                                     rootClass:[ShopModelRoot class]
                                          file:ShopModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GetCartByIdRspProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t GetCartByIdRspProto_Rspcode_RawValue(GetCartByIdRspProto *message) {
  GPBDescriptor *descriptor = [GetCartByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdRspProto_FieldNumber_Rspcode];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByIdRspProto_Rspcode_RawValue(GetCartByIdRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdRspProto_FieldNumber_Rspcode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t GetCartByIdRspProto_Rsptype_RawValue(GetCartByIdRspProto *message) {
  GPBDescriptor *descriptor = [GetCartByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdRspProto_FieldNumber_Rsptype];
  return GPBGetMessageInt32Field(message, field);
}

void SetGetCartByIdRspProto_Rsptype_RawValue(GetCartByIdRspProto *message, int32_t value) {
  GPBDescriptor *descriptor = [GetCartByIdRspProto descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:GetCartByIdRspProto_FieldNumber_Rsptype];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
